# Generated by Django 5.2.1 on 2025-06-02 12:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PDFAnalysis',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pdf_file', models.FileField(upload_to='pdf_uploads/%Y/%m/%d/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('analysis_date', models.DateTimeField(blank=True, null=True)),
                ('assessment', models.CharField(blank=True, choices=[('CLEAN', 'Clean - No significant indicators'), ('LOW_RISK', 'Low Risk - Minor anomalies'), ('MEDIUM_RISK', 'Medium Risk - Suspicious patterns'), ('HIGH_RISK', 'High Risk - Strong evidence of steganography')], max_length=20, null=True)),
                ('risk_score', models.FloatField(blank=True, null=True)),
                ('total_indicators', models.IntegerField(default=0)),
                ('ml_anomaly_score', models.FloatField(blank=True, null=True)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('indicators_data', models.JSONField(blank=True, default=dict)),
                ('features_data', models.JSONField(blank=True, default=dict)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('analysis_duration', models.FloatField(blank=True, null=True)),
                ('technique_used', models.CharField(default='auto', max_length=50)),
                ('model_version', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PDF Analysis',
                'verbose_name_plural': 'PDF Analyses',
                'ordering': ['-analysis_date', '-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=10)),
                ('description', models.TextField()),
                ('confidence', models.FloatField()),
                ('technical_details', models.JSONField(blank=True, default=dict)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='detector_app.pdfanalysis')),
            ],
            options={
                'ordering': ['-severity', '-confidence'],
            },
        ),
        migrations.CreateModel(
            name='PDFScanResult',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(max_length=500, upload_to='pdf_uploads/%Y/%m/%d/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('QUEUED', 'Queued')], default='PENDING', max_length=20)),
                ('is_malicious', models.BooleanField(blank=True, null=True)),
                ('ensemble_probability', models.FloatField(blank=True, null=True)),
                ('confidence_percentage', models.FloatField(blank=True, null=True)),
                ('risk_level', models.CharField(blank=True, choices=[('MINIMAL', 'Minimal'), ('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], max_length=10, null=True)),
                ('attention_probability', models.FloatField(blank=True, null=True)),
                ('deep_ff_probability', models.FloatField(blank=True, null=True)),
                ('wide_deep_probability', models.FloatField(blank=True, null=True)),
                ('pdf_pages', models.IntegerField(blank=True, null=True)),
                ('metadata_size', models.IntegerField(blank=True, null=True)),
                ('suspicious_count', models.IntegerField(blank=True, null=True)),
                ('javascript_elements', models.IntegerField(blank=True, null=True)),
                ('auto_actions', models.IntegerField(blank=True, null=True)),
                ('embedded_files', models.IntegerField(blank=True, null=True)),
                ('extracted_features', models.JSONField(blank=True, null=True)),
                ('individual_predictions', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_scans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PDF Scan Result',
                'verbose_name_plural': 'PDF Scan Results',
                'ordering': ['-created_at'],
            },
        ),
    ]
