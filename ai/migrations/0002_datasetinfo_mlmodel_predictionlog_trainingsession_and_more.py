# Generated by Django 5.2.1 on 2025-06-17 12:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='datasets/')),
                ('total_samples', models.IntegerField(blank=True, null=True)),
                ('positive_samples', models.IntegerField(blank=True, null=True)),
                ('negative_samples', models.IntegerField(blank=True, null=True)),
                ('feature_count', models.IntegerField(blank=True, null=True)),
                ('missing_values_count', models.IntegerField(blank=True, null=True)),
                ('duplicate_rows', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_format', models.CharField(default='csv', max_length=10)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_type', models.CharField(choices=[('xgboost', 'XGBoost'), ('wide_deep', 'Wide & Deep Neural Network')], max_length=20)),
                ('status', models.CharField(choices=[('training', 'Training'), ('completed', 'Completed'), ('failed', 'Failed')], default='training', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model_file', models.FileField(blank=True, null=True, upload_to='models/')),
                ('preprocessor_file', models.FileField(blank=True, null=True, upload_to='models/')),
                ('hyperparameters', models.JSONField(blank=True, default=dict)),
                ('training_duration', models.FloatField(blank=True, help_text='Training time in seconds', null=True)),
                ('feature_columns', models.JSONField(blank=True, default=list)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_file', models.FileField(blank=True, null=True, upload_to='prediction_inputs/')),
                ('input_features', models.JSONField(blank=True, default=dict)),
                ('xgboost_prediction', models.IntegerField(blank=True, null=True)),
                ('xgboost_probability', models.FloatField(blank=True, null=True)),
                ('wide_deep_prediction', models.IntegerField(blank=True, null=True)),
                ('wide_deep_probability', models.FloatField(blank=True, null=True)),
                ('prediction_time', models.FloatField(help_text='Time taken for prediction in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='ai.mlmodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('training_data_file', models.FileField(upload_to='training_data/')),
                ('data_shape', models.JSONField(blank=True, default=dict)),
                ('class_distribution', models.JSONField(blank=True, default=dict)),
                ('test_size', models.FloatField(default=0.2)),
                ('random_state', models.IntegerField(default=42)),
                ('stratify', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_accuracy', models.FloatField(blank=True, null=True)),
                ('test_accuracy', models.FloatField(blank=True, null=True)),
                ('train_auc', models.FloatField(blank=True, null=True)),
                ('test_auc', models.FloatField(blank=True, null=True)),
                ('classification_report', models.JSONField(blank=True, default=dict)),
                ('confusion_matrix', models.JSONField(blank=True, default=list)),
                ('feature_importance', models.JSONField(blank=True, default=dict)),
                ('cv_scores', models.JSONField(blank=True, default=list)),
                ('cv_mean', models.FloatField(blank=True, null=True)),
                ('cv_std', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='ai.mlmodel')),
                ('training_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai.trainingsession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingVisualization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_type', models.CharField(choices=[('training_history', 'Training History'), ('confusion_matrix', 'Confusion Matrix'), ('roc_curve', 'ROC Curve'), ('feature_importance', 'Feature Importance'), ('learning_curve', 'Learning Curve'), ('validation_curve', 'Validation Curve')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('chart_data', models.JSONField(blank=True, default=dict)),
                ('chart_image', models.ImageField(blank=True, null=True, upload_to='visualizations/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visualizations', to='ai.mlmodel')),
                ('training_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizations', to='ai.trainingsession')),
            ],
            options={
                'ordering': ['chart_type', '-created_at'],
            },
        ),
    ]
